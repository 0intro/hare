#!/bin/rc
# 
# Large scale (256) node fanout with gangfs
#

echo '== Test gangfs across a BlueGene/P node =='

#
# Parameters
#

IP=`{echo $ip | sed 's% .*%%'} #`
echo '************************ IP = '$IP

9fs $IP


TESTDIR=/tmp/uem_test
#TESTDIR=/n/frontend/home/ericvh/tmp/.test

ERRORLOG=$TESTDIR'/error-'$IP'.log'

G_MNTPATH=/proc

#CMD='/bin/date'
CMD='/bin/poke -L '$TESTDIR

PWD=`{pwd}#`
echo '************************ PWD = '$PWD

# setup 
#
#NUM=16
#NUM=32 # works

NUM=64
#NUM=256

I_MAX=4
J_MAX=4
K_MAX=4

fn cleanup {
	rm -rf $TESTDIR
}


fn enum_tests {
	TESTNUM=`{awk 'BEGIN     {
               for (i = 1; i <= '$1'; i++) printf "%d ", i
               exit }'}
	#`# shut up the code coloring bug...
}

fn enum_srv {
	SRVNUM=`{awk 'BEGIN     {
               for (i=0; i<'$I_MAX'; i++) 
	         for (j=0; j<'$J_MAX'; j++) 
		   for (k=1; k<='$K_MAX'; k++)
		     printf "11.%d.%d.%d ", i, j, k
               exit }'}
	#`# shut up the code coloring bug...
}

#
# Setup a testdirp
#
fn testdir {
	echo 'TESTDIR='$TESTDIR
	mkdir -p $TESTDIR
}

fn myexec {
	mypid=`{cat} #`
	echo -n res $NUM >>[2] $ERRORLOG
	echo -n exec $CMD >>[2] $ERRORLOG
	cat $G_MNTPATH/g$mypid/stdout > $TESTDIR/test1 >>[2] $ERRORLOG
}

fn basic {
	echo -n 'Basic Test for NUM='$NUM' procs....'

	# initialize files
	echo > $TESTDIR/test1

	# execute test
	myexec <>$G_MNTPATH/gclone >[1=0]

	# verify results -- date returns time time in seconds, so
	# simply varify that the number of procs returned are the same
	# as those requested.
	LEN=`{wc -l $TESTDIR/test1 | sed 's% *[a-zA-Z0-9/.]*$%%'} #`
	echo -n ' (LEN='$LEN') '
	if(! ~ $LEN $NUM) {
		echo FAILED!
		exit 'stdout: test failed'
	}

	echo Success!
	# cleanup
	#rm -rf $TESTDIR/*
}


# Setup
rfork

#cleanup
testdir

enum_srv

########################################

echo 'Serving CPU Nodes='
for(i in $SRVNUM) {
  echo -n ' '$i
  if(! test -e '/srv/'$i)
    9fs $i
  if(! test -e '/n/'$i){
    mount -cb /srv/$i /n/$i
    #bind -ac /proc /n/$i/proc
  }
}
echo ''

########################################

# Tests
basic

# Cleanup
#cleanup
