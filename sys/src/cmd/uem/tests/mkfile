</$objtype/mkfile

BIN=/$objtype/bin

DIRS = \

TARG = \
	mp-writer\

</sys/src/cmd/mkmany

dirsclean:V: clean
	p=`{pwd}
	for(i in $DIRS) @{
		cd $i
		mk $MKFLAGS $target
	}
	cd $p

dirsnuke:V: nuke
	p=`{pwd}
	for(i in $DIRS) @{
		cd $i
		mk $MKFLAGS $target
	}
	cd $p

regress:V: all
	#rc mpipefs.rc
	#rc execfs.rc
	rc gangfs.rc

debug:V: all
	#rc mpipefs.rc 9
	#rc execfs.rc 9
	#rc gangfs.rc 9
	#rc uem_64.rc 9
	#rc uem_512.rc 9
	#rc bg_256.rc 9
	rc uem_hier.rc 9
	#rc pbg_4.rc 12

kill:VE: 
	rm -f /srv/mpipe
	kill $O.execcmd | rc
	kill $O.gangfs | rc
	kill $O.execfs | rc
	kill $O.mpipefs | rc
	kill exportfs | rc
	kill import | rc
	
	broke | rc
	
	rm -f /srv/mpipe*
	rm -f /srv/execfs*
	rm -f /srv/gangfs*
	rm -f /srv/master
	rm -f /srv/child
	rm -f /srv/uem
	rm -f /srv/11.*
	rm -f /srv/io
	
	unmount /proc
	bind '#p' /proc

tidy:VE: kill
	rm -f *.log
	rm -f *.acid
	rm -rf .test .meta

acid:V: execfs.acid execcmd.acid mpipefs.acid gangfs.acid

clean:
	rm -f *.[$OS] *.a[$OS] y.tab.? lex.yy.c y.debug y.output [$OS].??* $TARG $CLEANFILES
	rm -f *.log
	rm -rf .meta .test

nuke:V:
	rm -f *.[$OS] y.tab.? lex.yy.c y.debug y.output [$OS].??* *.acid $TARG
	rm -f *.log
