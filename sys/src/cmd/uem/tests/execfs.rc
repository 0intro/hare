#!/bin/rc
# 
# Execfs Regression
#

echo '== Execfs Regression =='

#
# Parameters
#
TESTDIR=.test

#
# Cleanup Previous Instances
#
fn cleanup {
	echo Cleaning up previous runs.
	unmount /n/test > /dev/null >[2] /dev/null
	unmount /proc > /dev/null >[2] /dev/null
	bind '#p' /proc
	rm -f /srv/mpipe

	kill mpipefs | rc	# only way to get rid of mpipe turds
}

#
# Startup execfs 
#
fn startup {
	echo Starting mpipefs
	mpipefs -D -v 9 >[2] mpipe.log
	echo Starting execfs.
	execfs -D -v 9 >[2] execfs.log
	#execfs -D	# CHATTY

	#ps | grep mpipefs
}

#
# Setup a ramfs
#
fn testdir {
	mkdir -p $TESTDIR
	ramfs -m $TESTDIR
}

fn myexecstdin {
	mypid=`{cat}
	cat $TESTDIR/test > /proc/$mypid/stdin &
	cat /proc/$mypid/stdout > $TESTDIR/test1 &
	echo -n exec /bin/cat >>[2] execfs.log
	sleep 1
}

fn myexecstdout {
	mypid=`{cat}
	cat /proc/$mypid/stdout > $TESTDIR/test1 &
	sleep 1
	echo -n exec /bin/cat $TESTDIR/test >>[2] execfs.log
	sleep 1
}

fn stdout {
	echo -n Basic Test....

	# initialize files
	echo Hello Squidboy > $TESTDIR/test
	echo > $TESTDIR/test1

	# execute test
	myexecstdout <>/proc/clone >[1=0]

	# verify results
	if(! cmp -s $TESTDIR/test $TESTDIR/test1) {
		echo FAILED!
		exit 'stdout: test failed'
	}

	echo Success!
	# cleanup
	rm -rf $TESTDIR/*
}

fn stdin {
	echo -n Stdin Test....

	# initialize files
	echo Hello Squidboy > $TESTDIR/test
	echo > $TESTDIR/test1

	# execute test
	myexecstdin <>/proc/clone >[1=0]

	# verify results
	if(! cmp -s $TESTDIR/test $TESTDIR/test1) {
		echo FAILED!
		exit 'stdout: test failed'
	}

	echo Success!
	# cleanup
	rm -rf $TESTDIR/*
}

# Setup
cleanup
startup
testdir

# Tests
stdout
stdin	#failing

# Cleanup
unmount $TESTDIR
rm -rf $TESTDIR
cleanup
