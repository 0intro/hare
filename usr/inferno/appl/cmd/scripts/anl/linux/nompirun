#!/bin/bash
#
# nompirun - start a non-traditional job on BlueGene
# Copyright 2010 Eric Van Hensbergen
# 
# USAGE: nompirun [-A cobalt_account] [-h brasil_host] [-p brasil_port] 
#				[-e key=value] [-n numnodes] [-t time] [-k kernelprofile] 
#				[-r rootpath]
#				cmd args
# 
# ARGUMENTS:
#	-A: Your cobalt account
#	-h: host running brasil daemon (defaults to current host)
#	-p: port running brasil daemon (should be unique per user)
#	-n: number of cpu nodes to provision 
#	-t: length of time to request
#	-k: kernel profile (default's to user's name
#	-e key=value: specify an environment variable to pass (can be repeated)
#	cmd args: command to run on I/O nodes (eventually compute nodes maybe)
#			(default to /bin/rc)
#
# ENVIRONMENT VARIABLES: (can be used to override defaults in place of cmdline
#	BRASIL_HOST - host running brasil daemon
#	BRASIL_PORT - port running brasil daemon (should be unique)
#	PLAN9_ROOT - local path to Plan 9 root file system
#	COBALT_ACCOUNT - cobalt account
#
# TODO:
#	- Add namespace control files
#	- Add centralservices host/port info
#	- Add user home directory info
#	- Autostart (and cleanup) brasil if its not running
#
# BUGS:
#	Several I'm sure
#

# ENVIRONMENTAL DEFAULTS

kflag=$USER
pflag=$BRASIL_PORT
rflag=$PLAN9_ROOT
hflag=$BRASIL_HOST
aflag=$COBALT_ACCOUNT

# Command line defaults
nflag=64
tflag=30
eflag="MODE=nompirun"

while getopts 'A:e:h:k:n:p:t:r:' OPTION
do
	case $OPTION in
	A)	aflag="$OPTARG"
		;;
	r)	rflag="$OPTARG"
		;;
	h)	hflag="$OPTARG"
		;;
	p)	pflag="$OPTARG"
		;;
	n)	nflag=$OPTARG
		;;
	t)	tflag=$OPTARG
		;;
	e)	eflag+=":$OPTARG"
		;;
	k)
		kflag="$OPTARG"
		;;
	?)	printf "Usage: %s: [-A cobalt_account] [-h brasil_host] [-p brasil_port] [-e key=value] [-n numnodes] [-t time] [-r rootpath][-k kernelprofile] args\n" $(basename $0) >&2
		exit 2
		;;
	esac
done
shift $((OPTIND - 1))

# SET DEFAULTS IF USER DOESNT SPECIFY
if [ -z $aflag ]
then
	aflag=BGPPlan9Meas
fi
if [ -z $rflag ]
then
	rflag=/home/ericvh/9
fi
if [ -z $hflag ]
then
	hflag=`hostname`
fi
if [ -z $pflag ]
then
	printf "\nWARNING: using default port (5670)\nPlease set using BRASIL_PORT environment variable or -p command line argument\n\n"
	pflag=5670
fi

eflag+=":BRASIL_ADDR=tcp\!$hflag\!$pflag:PLAN9_ROOT=$rflag"

#
# Make sure the user is trying to execute something, otherwise just 
# default to executing rc
#
COMMAND=$@

if [ -z $COMMAND ]
then
	COMMAND="$rflag/power/bin/rc"
fi

# Verify sanity of object files about to be loaded
for i in /bgsys/argonne-utils/profiles/$kflag/{CNK,INK,CNS,uloader,ramdisk}
do
	out=`objdump -x $i`
	case "$out" in
	*"File format not recognized"*)
		echo $i: invalid executable format 1>2
		exit -1;;
	esac
done

JOBID=`qsub -A $aflag -t $tflag -n $nflag --kernel $kflag --env $eflag $COMMAND`

echo $JOBID

